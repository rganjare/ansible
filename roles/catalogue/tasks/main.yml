- name: Setting up catalogue
  ansible.builtin.debug:
    msg: Setting up Catalogue Component

# 1. This service is written in NodeJS, Hence need to install NodeJS in the system.
# # curl -sL https://rpm.nodesource.com/setup_lts.x | bash
- name: Download YUM repo
  ansible.builtin.shell: curl -sL https://rpm.nodesource.com/setup_lts.x | bash 

# # yum install nodejs gcc-c++ -y
- name: Install NodeJS
  ansible.builtin.yum:
    name: 
      - nodejs
      - gcc-c++
    state: installed

# 1. Let's now set up the catalogue application.
# As part of operating system standards, we run all the applications and databases as a normal user but not with root user.
# So to run the catalogue service we choose to run as a normal user and that user name should be more relevant to the project. 
# Hence we will use `roboshop` as the username to run the service.
# # useradd roboshop

- name: Add the application user 
  ansible.builtin.user:
    name: roboshop
    comment: Roboshop application user

# 1. So let's switch to the `roboshop` user and run the following commands.

# ```bash
# $ curl -s -L -o /tmp/catalogue.zip "https://github.com/roboshop-devops-project/catalogue/archive/main.zip"
# $ cd /home/roboshop
# $ unzip /tmp/catalogue.zip
# $ mv catalogue-main catalogue
# $ cd /home/roboshop/catalogue
# $ npm install

# ```

# 1. Update SystemD file with correct IP addresses
    
#     Update `MONGO_DNSNAME` with MongoDB Server IP
    
# 2. Now, lets set up the service with systemctl.

# ```bash
# # mv /home/roboshop/catalogue/systemd.service /etc/systemd/system/catalogue.service
# # systemctl daemon-reload
# # systemctl start catalogue
# # systemctl enable catalogue

# ```